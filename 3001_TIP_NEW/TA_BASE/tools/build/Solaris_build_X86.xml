<project name="CODE_TA_BASE_DDB" default="build">
    <taskdef name="UnixBuildFile" classname="buildsystem.tasks.BuildFileTask"/>
    <taskdef name="version" classname="buildsystem.tasks.VersionTask"/>
    <taskdef name="SolarisPackage" classname="buildsystem.tasks.SolarisPackage"/>
    
    <target name="init"
        description="--> Loads the build configuration if it hasn't already been loaded.">
        <loadproperties srcFile="${basedir}/../config.ini"/>
    </target>

    <target name="version"
            depends="init,changeAttributes4VersionGen"
            description="--> Updates all VersionGen.cpp files to contain the correct version symbols.">
		<exec dir="${basedir}" executable="perl">
			<arg line="${COTS.Dir}/Versioning.pl ${basedir}/code/transactive ${Version} ${Version.ProjectName}"/>
		</exec>
    </target>
	
    <target name="generateTargets" depends="init">
        <UnixBuildFile basedir="${basedir}" buildFileName="BuildUnix.xml" buildConfiguration="${Build.Configuration}">
            <fileset dir=".">
                <include name="code/transactive/core/ocl/Makefile"/>
				<include name="code/**/Makefile"/>
                <exclude name="**/cots/**"/>
                <exclude name="**/tools/**"/>
                <exclude name="**/test/**"/>
            </fileset>
            <exclude>
				<pattern value="EchoServerExample"/>
				<pattern value="TA_GenericServerSimulator"/>
				<pattern value="DistribSocketsTestCorbaDef"/>
				<pattern value="FrameworkCorbaDef"/>
				<pattern value="CommsConsumer"/>
				<pattern value="RightsAgentTestConsole"/>
				<pattern value="TA_GenericSimulator"/>
				<pattern value="SocketsTest"/>
				<pattern value="DummyAgent"/>
				<pattern value="ConsoleManager"/>
				<pattern value="TVSendEvent"/>
				<pattern value="SchedulingAgentCLI"/>
				<pattern value="DistribSocketsTest"/>
				<pattern value="simulator_example"/>
			</exclude>
            <DirectoryTargets>
                <pattern value="core"/>
                <pattern value="bus"/>
                <pattern value="app"/>
            </DirectoryTargets>
        </UnixBuildFile>
    </target>
    
    <target name="fixOmniidl" depends="init">
		<chmod file="${basedir}/code/cots/omniORB/omniORB_4.1.6/i386-pc-solaris2.10/bin/omniidl" perm="ugo+x"/>
    </target>
    
    <target name="build" depends="init,fixOmniidl,generateTargets">
        <ant antfile="${basedir}/BuildUnix.xml" inheritAll="false"/>
    </target>
       
    <!-- Cleans only the intermediate files -->
    <target name="clean_inter" depends="init">
        <delete dir="${basedir}/build" includeEmptyDirs="true" quiet="true"/>
        <delete dir="${basedir}/dep" includeEmptyDirs="true" quiet="true"/>
    </target>  

    <!-- Cleans the files generated by the build but not the code -->
    <target name="clean" depends="clean_inter">
        <delete dir="${basedir}/bin" includeEmptyDirs="true" quiet="true"/>
        <delete dir="${basedir}/sdk" includeEmptyDirs="true" quiet="true"/>
        <delete dir="${basedir}/staging" includeEmptyDirs="true" quiet="true"/>
    </target>  

    <target name="clean_cots" depends="clean">
        <delete dir="${COTS.Dir}/cots" includeEmptyDirs="true" quiet="true"/>		
    </target>  

    <!-- Cleans everything - all of the above plus the codebase as well -->
    <target name="clean_all" depends="clean">
        <delete dir="${basedir}/code/tools" includeEmptyDirs="true" quiet="true"/>		
		<delete dir="${basedir}/code/transactive" includeEmptyDirs="true" quiet="true"/>		
    </target>  

    <!-- Copy all the good stuff to a common staging area -->
    <!-- revised by wanzl 20090804 -->
    <target name="stage" depends="init">

  	<!-- staging/bin -->
        <copy toDir="${Base.Dir.Staging}/bin" flatten = "true" overwrite="true">
            <fileset dir="bin" casesensitive="false" >
                <include name="SOLARIS*/*" />
            </fileset>

	    <fileset dir="code/transactive/app/notification_service" casesensitive="false" >
                <include name="omni_notification.cfg" />
            </fileset>

            <fileset dir="code/tools/deployment_scripts" casesensitive="false" >
                <include name="watson" />
                <include name="version*" />
                <include name="transact" />
                <include name="transactive" />
                <include name="transactive.station" />
            </fileset>
        </copy>

	<!-- staging/SOLARIS* -->
        <copy toDir="${Base.Dir.Staging}/sdk" overwrite="true">
            <fileset dir="sdk" casesensitive="false" >
                <include name="SOLARIS*/*" />
            </fileset>
        </copy>

	<!-- staging/lib -->
        <copy toDir="${Base.Dir.Staging}/sdk/lib" overwrite="true" flatten="true">
            <fileset dir="code/cots/omniORB/${omni.version}/${omni.OS.version}/lib" casesensitive="false" >
                <include name="*.so*" />
                <exclude name="CVS" />
            </fileset>

            <fileset dir="code/cots/ACE/${ace.version}/lib/${OS.version}" casesensitive="false" >
                <include name="*.so*" />
                <exclude name="CVS" />
            </fileset>

            <fileset dir="code/cots/oracle/${oracle.version}/${OS.version}/lib" casesensitive="false" >
                <include name="*.so*" />
                <exclude name="CVS" />
            </fileset>

			<!--fileset dir="${Dir.Dir}/ACE/6_0_4/ACE_wrappers/build/ace/.libs" casesensitive="false">
				<include name="libACE.so.6.0.4" />
				<exclude name="CVS" />
			</fileset-->
		
            <fileset dir="${Base.Dir.cots}/oracle/10.2.0/SOLARIS_5.10_i86pc/lib" casesensitive="false">
				<include name="libclntsh.so.10.1" />
				<exclude name="CVS" />
			</fileset>
		
            <fileset dir="${Roor.Dir}/lib" casesensitive="false">
				<include name="libstdc++.so.6"/>
				<exclude name="CVS" />
			</fileset>

			<fileset dir="${Roor.Dir}/lib" casesensitive="false">
				<include name="libgcc_s.so.1"/>
				<exclude name="CVS" />
			</fileset>

	    <fileset dir="code/cots/boost/${boost.version}/libs/${OS.version}" casesensitive="false" >
                <include name="libboost_date_time-${boost.build.version}.so*" />
                <include name="libboost_system-${boost.build.version}.so*" />
                <include name="libboost_filesystem-${boost.build.version}.so*" />
				<include name="libboost_regex-${boost.build.version}.so*" />
                <include name="libboost_regex-gcc-mt.so*" />
				<include name="libboost_thread-${boost.build.version}.so*" />
                <exclude name="CVS" />
            </fileset>

			<fileset dir="code/cots/curl/curl-7.21.7/build/lib/" casesensitive="false" >
                <include name="libcrypto.so" />
                <include name="libcrypto.so.1.0.0" />
                <include name="libcrypto.so.1.0.0" />
                <include name="libcurl.so" />
                <include name="libcurl.so.4" />
                <include name="libcurl.so.4.2.0" />
                <include name="libssh2.so" />
                <include name="libssh2.so.1" />
                <include name="libssh2.so.1.0.1" />
                <include name="libssl.so" />
                <include name="libssl.so.1.0.0" />
			</fileset>

        </copy>

		<!-- staging/lib/engines -->
        <copy toDir="${Base.Dir.Staging}/sdk/lib/engines" overwrite="true" flatten="true">
			<fileset dir="code/cots/curl/curl-7.21.7/build/lib/engines/" casesensitive="false" >
                <include name="lib4758cca.so" />
                <include name="libaep.so" />
                <include name="libatalla.so" />
                <include name="libcapi.so" />
                <include name="libchil.so" />
                <include name="libcswift.so" />
                <include name="libgmp.so" />
                <include name="libgost.so" />
                <include name="libnuron.so" />
                <include name="libpadlock.so" />
                <include name="libsureware.so" />
                <include name="libubsec.so" />
			</fileset>

        </copy>

  	<!-- staging/sdk/include/cots -->
        <copy toDir="${Base.Dir.Staging}/sdk/include/cots" overwrite="true">
            <fileset dir="code/cots" casesensitive="false" >
		<include name="**/ACE_wrappers/**/*.h" />
		<include name="**/ACE_wrappers/ace/*.inl" />
		<include name="**/ACE_wrappers/ace/*.i" />
		<include name="**/ACE_wrappers/ace/*.cpp" />
		<include name="**/boost/boost_1_39_0/boost/*.hpp" />
		<include name="**/boost/boost_1_39_0/boost/**/*.hpp" />
		<include name="**/boost/boost_1_39_0/boost/**/*.ipp" />
            </fileset>
        </copy>

	<!-- staging/omniORB -->
	<copy toDir="${Base.Dir.Staging}/sdk" flatten="false" overwrite="true">
            <fileset dir="code/cots" casesensitive="false" >
		<include name="omniORB/omniORB_4.1.6/${omni.OS.version}/bin/*" />
		<include name="omniORB/omniORB_4.1.6/${omni.OS.version}/lib/**/*" />
		<include name="omniORB/omniORB_4.1.6/${omni.OS.version}/include/**/*.h" />
		<include name="omniORB/omniORB_4.1.6/${omni.OS.version}/include/**/*.hh" />
                <exclude name="CVS" />
            </fileset>
        </copy>

  	<!-- staging/sdk/include/transactive -->
        <copy toDir="${Base.Dir.Staging}/sdk/include/transactive" overwrite="true">
            <fileset dir="code/transactive" casesensitive="false" >
                <include name="core/**/*.h" />
                <include name="bus/**/*.h" />
                <exclude name="**/test/**"/>
            </fileset>

            <fileset dir="code/transactive" casesensitive="false" >
                <include name="**/*.inl" />
            </fileset>

            <fileset dir="build/SOLARIS_n/transactive" casesensitive="false" >
                <include name="**/*.h" />
                <include name="**/*.hh" />
            </fileset>
        </copy>

  	<!-- staging/sdk/include/transactive -->
        <copy toDir="${Base.Dir.Staging}/sdk/idl/transactive" overwrite="true">
            <fileset dir="code/transactive" casesensitive="false" >
                <include name="**/*.idl" />
            </fileset>
        </copy>


        <!-- Change the version numbers in the version files. -->
        <exec executable="sed"
              dir="${basedir}/code/tools/deployment_scripts"
              output="${Base.Dir.Staging}/bin/versions.occ">
            <arg line="'s/Version:.*/Version:${Version.Major}/;s/:.*:/:${Version.Minor}:/g' versions.occ" />
        </exec>

        <exec executable="sed"
              dir="${basedir}/code/tools/deployment_scripts"
              output="${Base.Dir.Staging}/bin/versions.msm">
            <arg line="'s/Version:.*/Version:${Version.Major}/;s/:.*:/:${Version.Minor}:/g' versions.msm" />
        </exec>

        <exec executable="sed"
              dir="${basedir}/code/tools/deployment_scripts"
              output="${Base.Dir.Staging}/bin/versions.dbg">
            <arg line="'s/Version:.*/Version:${Version.Major}/;s/:.*:/:${Version.Minor}:/g' versions.dbg" />
        </exec>

        <exec executable="sed"
              dir="${basedir}/code/tools/deployment_scripts"
              output="${Base.Dir.Staging}/bin/versions.kcda">
            <arg line="'s/Version:.*/Version:${Version.Major}/;s/:.*:/:${Versionn.Minor}:/g' versions.kcda" />
        </exec>
    </target>

    <target name="package" depends="init">
        <SolarisPackage tempDir="/u01/tabuild/temp/" owner="transactive" group="staff">
            <PackageInfo
                PKG="transActive"
                NAME="transActive"
                ARCH="SPARC"
                VERSION="${Version}"
                CATEGORY="application"
                VENDOR="Ripple Systems"
                EMAIL="helpdesk@services.ripple-systems.com"
                PSTAMP="Ripple Systems"
                BASEDIR="/"
                CLASSES="none" />

            <InstallScripts
                requestScript="code/tools/deployment_scripts/request.sh"
                postInstallScript="code/tools/deployment_scripts/postinstall.sh"
                preRemoveScript="code/tools/deployment_scripts/preremove.sh" />

            <FileSet dir="${Base.Dir.Staging}">
                <include name="**/*"/>
            </FileSet>

            <FileProperty fileexpression="u02"
                          owner="?"
                          group="?"
                          permission="?" />
            <FileProperty fileexpression="u02/transactive"
                          owner="?"
                          group="?"
                          permission="?" />
            <FileProperty fileexpression=".*/bin/.*"
                          owner="transactive"
                          group="its"
                          permission="0755" />
            <FileProperty fileexpression=".*/bin/System.*"
                          owner="root"
                          group="other"
                          permission="0755" />
            <FileProperty fileexpression="etc/?.*"
                          owner="?"
                          group="?"
                          permission="?" />
            <FileProperty fileexpression="etc/init\.d/transact"
                          owner="root"
                          group="other"
                          permission="0755" />
        </SolarisPackage>

        <!-- Compress the package -->
        <tar basedir="/u07/temp" longfile="gnu" compression="gzip" 	
			 destfile="${Base.Dir.Staging}/transactive_BASE_${Version.Iteration}.tar.gz"/>
    </target>

    <target name="zipSDK"
            depends="init"
            description="--> Tar and Gzip all the sdk stuff neatly">
        <tar basedir="${Base.Dir.Staging}/sdk" longfile="gnu" compression="gzip" destfile="${basedir}/sdk_${Version.Iteration}.tar.gz"/>
    </target>

    <!-- checkout from Perforce -->	
    <!-- Checkout the code base, ${Base.Code.CheckoutTag} -->
    <target name="p4checkoutCode" 
		depends="p4checkoutCots,
				 p4checkoutTools,
				 p4checkoutTransactive">
		<!-- Does nothing but invoke its dependencies -->
    </target>

   <target name="p4checkoutCots" 
		depends="p4checkoutACE, 
				 p4checkoutBoostHeaders, 
				 p4checkoutBoostLibs, 
				 p4checkoutCrystalReports, 
				 p4checkoutDirectSound, 
				 p4checkoutHTMLHelp, 
				 p4checkoutNero, 
				 p4checkoutomniOrbWindows, 
				 p4checkoutomniOrbSolaris, 
				 p4checkoutOracle, 
				 p4checkoutTeeChart, 
				 p4checkoutVisualCpp, 
				 p4checkoutWinTech,
				 p4checkoutWinStackTrace,
				 p4checkoutZipArchive,
				 p4checkoutCurl">
		<!-- Does nothing but invoke its dependencies -->
    </target>

    <!-- checkout tools from Perforce -->
    <target name="p4checkoutTools" depends="init">
		<p4sync view="${P4.View.CODE_TA_BASE}/tools/..." force="yes"/>
    </target>

    <!-- checkout transactive from Perforce -->
    <target name="p4checkoutTransactive" depends="init">
		<p4sync view="${P4.View.CODE_TA_BASE}/transactive/..." force="yes"/>
    </target>

    <target name="changeAttributes4VersionGen" depends="init">
		<chmod dir="${basedir}\code\transactive" perm="ugo+rw" includes="**/VersionGen.cpp"/>
    </target>

    <target name="p4checkoutACE" 
			depends="p4checkoutACEFiles, 
					 p4checkoutACESolarisLibs">
    	<!-- Does nothing but invoke its dependencies -->
    </target>

    <!-- checkout ACE file -->
    <target name="p4checkoutACEFiles" depends="init">
		<p4sync view="${P4.View.COTS}/ACE/6_0_4/ACE_wrappers/..." force="yes"/>
    </target>

    <!-- checkout ACE Solaris libs -->

    <target name="p4checkoutACESolarisLibs" depends="init">
<!--		<p4sync view="${P4.View.COTS}/ACE/6_0_4/lib/..." force="yes"/> -->
    </target>

    <!-- checkout boost header -->
    <target name="p4checkoutBoostHeaders" depends="init">
		<!--<p4sync view="${P4.View.COTS}/boost/boost_1_39_0/boost/..." force="yes"/>-->
    </target>

	<!-- checkout boost libraries -->
    <target name="p4checkoutBoostLibs" depends="init">
		<!--<p4sync view="${P4.View.COTS}/boost/boost_1_39_0/libs/..." force="yes"/>-->
    </target>

	<!-- checkout crystall reports -->
    <target name="p4checkoutCrystalReports" depends="init">
		<p4sync view="${P4.View.COTS}/CrystalReports/..." force="yes"/>
    </target>

	<!-- checkout Direct Sound -->
    <target name="p4checkoutDirectSound" depends="init">
		<p4sync view="${P4.View.COTS}/DirectSound/..." force="yes"/>	
    </target>

	<!-- checkout HTML Help -->
    <target name="p4checkoutHTMLHelp" depends="init">
		<p4sync view="${P4.View.COTS}/HTMLHelp/..." force="yes"/>
    </target>

	<!-- checkout Nero -->
    <target name="p4checkoutNero" depends="init">
		<p4sync view="${P4.View.COTS}/Nero/..." force="yes"/>
    </target>

	<!-- checkout omniORB -->
    <target name="p4checkoutomniOrbWindows" 
			depends="p4checkoutomniORBBin, 
			p4checkoutomniORBLib, 
			p4checkoutomniORBInclude, 
			p4checkoutomniORBSrc, 
			p4checkoutomniORBIDLCOS, 
			p4checkoutomniNotifyIDL">
		<!-- Does nothing but invoke its dependencies -->
    </target>

    <target name="p4checkoutomniORBBin" depends="init">
		<p4sync view="${P4.View.COTS}/omniORB/omniORB_4.1.6/bin/..." force="yes"/>
    </target>

    <target name="p4checkoutomniORBLib" depends="init">
		<p4sync view="${P4.View.COTS}/omniORB/omniORB_4.1.6/lib/..." force="yes"/>
    </target>

    <target name="p4checkoutomniORBInclude" depends="init">
		<p4sync view="${P4.View.COTS}/omniORB/omniORB_4.1.6/include/..." force="yes"/>
    </target>

    <target name="p4checkoutomniORBSrc" depends="init">
		<p4sync view="${P4.View.COTS}/omniORB/omniORB_4.1.6/src/services/include/omniNotify/..." force="yes"/>
    </target>

    <target name="p4checkoutomniORBIDLCOS" depends="init">
		<p4sync view="${P4.View.COTS}/omniORB/omniORB_4.1.6/idl/COS/..." force="yes"/>
    </target>

    <target name="p4checkoutomniNotifyIDL" depends="init">
		<p4sync view="${P4.View.COTS}/omniORB/omniORB_4.1.6/src/services/omniNotify/idl/..." force="yes"/>
    </target>

    <target name="p4checkoutomniOrbSolaris" depends="init">
<p4sync view="${P4.View.COTS}/omniORB/omniORB_4.1.6/..." force="yes"/>
		<!--<p4sync view="${P4.View.COTS}/omniORB/omniORB_4.1.6/sun4_sosV_5.8/..." force="yes"/>-->
		<!--<p4sync view="${P4.View.COTS}/omniORB/omniORB_4.1.6/sun4_sosV_5.9/..." force="yes"/>-->
    </target>

    <target name="p4checkoutOracle" depends="init">
		<p4sync view="${P4.View.COTS}/oracle/..." force="yes"/>
    </target>

    <target name="p4checkoutTeeChart" depends="init">
		<p4sync view="${P4.View.COTS}/TeeChart/..." force="yes"/>
    </target>

    <target name="p4checkoutVisualCpp" depends="init">
		<p4sync view="${P4.View.COTS}/VisualCpp/..." force="yes"/>
    </target>

    <target name="p4checkoutWinTech" depends="init">
		<p4sync view="${P4.View.COTS}/WinTech/..." force="yes"/>
    </target>
    
    <target name="p4checkoutWinStackTrace" depends="init">
		<p4sync view="${P4.View.COTS}/WinStackTrace/..." force="yes"/>
    </target>

    <target name="p4checkoutZipArchive" depends="init">
		<p4sync view="${P4.View.COTS}/ZipArchive/..." force="yes"/>
    </target>

    <target name="p4checkoutCurl" depends="init">
	<p4sync view="${P4.View.COTS}/curl/curl-7.21.7/..." force="yes"/>
    </target>
</project>
